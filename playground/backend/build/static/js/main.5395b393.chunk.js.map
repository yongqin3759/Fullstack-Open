{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","notesRESTApi","getAll","axios","get","then","response","data","create","newObject","post","update","id","request","put","console","log","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5395b393.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n  return (\n    <li className='note'>{note.content}\n    <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  console.log(newObject)\n  return request.then(response => response.data)\n}\n\nconst notesRESTApi = { getAll, create,  update }\n\nexport default notesRESTApi","import React from \"react\"\n\nconst Notification = ({ message }) => {\n  console.log(message)\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, By Yong Qin (credit to Sreekar and Tiff for helping me out)and Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...') \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n  useEffect(()=> \n    noteService\n    .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n    }), [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n    .create(noteObject)\n    .then(returnedNote => {\n      console.log(returnedNote)\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    console.log('importance of ' + id + ' needs to be toggled')\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n    console.log(note)\n    noteService\n      .update(id,changedNote)\n      .then(returnedNote => {\n        console.log('returned note', returnedNote)\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n            key={note.id} \n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>   \n      <Footer/>\n    </div>\n  )\n}\n\nexport default App ","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}